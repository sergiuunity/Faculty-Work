     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      ;m/n = > word/doubleword
    15 00000000 2000                        m dw 32
    16 00000002 0B000000                    n dd 11
    17                                  
    18                                      
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23                                          ;n->edx:eax
    24 00000000 B800000000                      mov eax, 0
    25 00000005 BA00000000                      mov edx, 0
    26 0000000A 66A1[00000000]                  mov ax, [m]
    27 00000010 F735[02000000]                  div dword[n]
    28                                          ;eax-q, edx-r
    29                                          
    30                                          ; exit(0)
    31 00000016 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    32 00000018 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
