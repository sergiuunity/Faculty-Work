     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf              ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import scanf msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14                                      ; ...
    15 00000000 2564000000000000            format dd '%d', 0
    16 00000008 00000000                    x dd 0
    17                                      
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                      
    22                                          ; ...
    23 00000000 68[08000000]                    push dword x
    24 00000005 68[00000000]                    push dword format
    25 0000000A FF15[00000000]                  call[scanf]
    26 00000010 83C408                          add esp, 4*2
    27                                          
    28 00000013 A1[08000000]                    mov eax, dword[x]
    29 00000018 50                              push eax
    30 00000019 68[00000000]                    push dword format
    31 0000001E FF15[00000000]                  call[printf]
    32 00000024 83C408                          add esp, 4*2
    33                                          
    34                                          
    35                                          ; exit(0)
    36 00000027 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 00000029 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
