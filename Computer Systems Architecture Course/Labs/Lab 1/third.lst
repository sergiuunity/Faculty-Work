     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0F00                    x dw 15
    15 00000002 05                      y db 5
    16 00000003 04000000                z dd 4
    17                                      ; x-7+y-2-3+z
    18                                      
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23                                      
    24                                      ;x-7
    25 00000000 668B1D[00000000]            mov bx, [x]
    26 00000007 6683EB07                    sub bx, 7
    27                                      
    28                                      ;x-7+y
    29 0000000B 66B90000                    mov cx, 0
    30 0000000F 8A0D[02000000]              mov cl, [y]
    31 00000015 6601CB                      add bx, cx
    32                                      
    33                                      
    34                                      ;x-7+y-2
    35 00000018 6683EB02                    sub bx, 2
    36                                      
    37                                      ;x-7+y-2-3
    38                                      
    39 0000001C 6683EB03                    sub bx, 3
    40                                      
    41                                      ;x-7+y-2-3+z
    42                                      
    43 00000020 BA00000000                  mov edx, 0
    44 00000025 6689DA                      mov dx, bx
    45 00000028 2B15[03000000]              sub edx, [z]
    46                                      
    47                                      
    48                                          ; exit(0)
    49 0000002E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    50 00000030 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
    51                                  
    52                                          
