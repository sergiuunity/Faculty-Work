     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      ;take 3 variables (3 data type) and 2 constants and create an expresion with +,-, then write the code to solve it
    15                                      ;a + 11 - b + 1ch - c
    16 00000000 21                          a db 33
    17 00000001 03000000                    b dd 3
    18 00000005 0D                          c db 13
    19                                      
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24                                          ;a + 11
    25                                          
    26 00000000 A0[00000000]                    mov al, [a]
    27 00000005 040B                            add al, 11
    28                                          
    29                                          ;a + 11 - b
    30                                          
    31 00000007 BB00000000                      mov ebx, 0
    32 0000000C 88C3                            mov bl, al
    33 0000000E 2B1D[01000000]                  sub ebx, [b]
    34                                          
    35                                          ;a + 11 - b + 2dh
    36                                          
    37 00000014 83C31C                          add ebx, 1ch
    38                                          
    39                                          ;a + 11 - b + 2dh - c
    40                                          
    41 00000017 2B1D[05000000]                  sub ebx, [c]
    42                                          
    43                                          ; exit(0)
    44 0000001D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    45 0000001F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
